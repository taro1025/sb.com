# Generated by Django 3.1.4 on 2020-12-21 17:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import match.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('my_profile', models.TextField(blank=True, null=True, verbose_name='自己紹介')),
                ('user_img', models.ImageField(blank=True, upload_to='', verbose_name='プロフ画像')),
                ('menter', models.IntegerField(choices=[(1, 'メンター'), (2, '弟子')], default=0, verbose_name='会員形式')),
                ('course1', models.IntegerField(blank=True, null=True, verbose_name='コース1')),
                ('course2', models.IntegerField(blank=True, null=True, verbose_name='コース2')),
                ('course3', models.IntegerField(blank=True, null=True, verbose_name='コース3')),
                ('describe1', models.TextField(blank=True, null=True, verbose_name='コース1の説明')),
                ('describe2', models.TextField(blank=True, null=True, verbose_name='コース2の説明')),
                ('describe3', models.TextField(blank=True, null=True, verbose_name='コース3の説明')),
                ('busy', models.BooleanField(default=True, verbose_name='忙しい')),
                ('user_account_number', models.CharField(max_length=128, null=True, verbose_name='口座番号')),
                ('user_routing_number', models.CharField(max_length=128, null=True, verbose_name='銀行コード＋支店コード')),
                ('user_holder_name', models.CharField(max_length=32, null=True, verbose_name='口座名義')),
                ('user_postal_code', models.CharField(max_length=128, null=True, verbose_name='郵便番号')),
                ('user_state_kana', models.CharField(max_length=32, null=True, verbose_name='都道府県（カナ）')),
                ('user_city_kana', models.CharField(max_length=32, null=True, verbose_name='区市町村（カナ）')),
                ('user_town_kana', models.CharField(max_length=32, null=True, verbose_name='町名（カナ）')),
                ('user_line1_kana', models.CharField(max_length=32, null=True, verbose_name='番地、号（カナ）')),
                ('user_line2_kana', models.CharField(blank=True, max_length=32, null=True, verbose_name='建物・部屋番号・その他（任意）（カナ）')),
                ('user_state_kanji', models.CharField(max_length=32, null=True, verbose_name='都道府県（漢字）')),
                ('user_city_kanji', models.CharField(max_length=32, null=True, verbose_name='区市町村（漢字）')),
                ('user_town_kanji', models.CharField(max_length=32, null=True, verbose_name='町名（漢字）')),
                ('user_line1_kanji', models.CharField(max_length=32, null=True, verbose_name='番地、号（漢字）')),
                ('user_line2_kanji', models.CharField(blank=True, max_length=32, null=True, verbose_name='建物・部屋番号・その他（任意）（漢字）')),
                ('user_day', models.IntegerField(null=True, verbose_name='生年月日（日）')),
                ('user_month', models.IntegerField(null=True, verbose_name='生年月日（月）')),
                ('user_year', models.IntegerField(null=True, verbose_name='生年月日（年）')),
                ('user_phone_number', models.CharField(max_length=128, null=True, verbose_name='電話番号')),
                ('user_tos_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='タイムスタンプ')),
                ('user_last_name_kanji', models.CharField(max_length=32, null=True, verbose_name='性（漢字）')),
                ('user_last_name_kana', models.CharField(max_length=32, null=True, verbose_name='性（かな）')),
                ('user_first_name_kanji', models.CharField(max_length=32, null=True, verbose_name='名（漢字）')),
                ('user_first_name_kana', models.CharField(max_length=32, null=True, verbose_name='名（かな）')),
                ('user_gender', models.IntegerField(choices=[(1, '男'), (2, '女')], default=0, verbose_name='性別')),
                ('user_verification', models.ImageField(null=True, upload_to='', verbose_name='本人確認')),
                ('user_account_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='決済に使うID')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', match.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Char',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char', models.CharField(max_length=255, verbose_name='キャラ')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='メッセージ')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='送信日時間')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='room', to=settings.AUTH_USER_MODEL, verbose_name='メッセージの持ち主')),
                ('to_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='to_user', to=settings.AUTH_USER_MODEL, verbose_name='メッセージの宛先')),
            ],
        ),
        migrations.CreateModel(
            name='BuyingHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=200, verbose_name='タイトル')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='日付')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course', to=settings.AUTH_USER_MODEL, verbose_name='メッセージの宛先')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buyer', to=settings.AUTH_USER_MODEL, verbose_name='購入者')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='user_char',
            field=models.ManyToManyField(blank=True, to='match.Char', verbose_name='使用キャラ'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
